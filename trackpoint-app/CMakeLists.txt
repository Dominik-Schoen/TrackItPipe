CMAKE_MINIMUM_REQUIRED(VERSION 3.19)
PROJECT(TrackpointApp VERSION 0.0.1 LANGUAGES CXX)

# Include modules
INCLUDE(FetchContent)

# Build TrackpointApp
# Set C++ mode
SET(CMAKE_CXX_STANDARD 20)
SET(CMAKE_CXX_STANDARD_REQUIRED True)

SET(CMAKE_CXX_FLAGS_DEBUG "-O0")
SET(CMAKE_CXX_FLAGS_RELEASE "-O2")

SET(CMAKE_AUTOUIC ON)
SET(CMAKE_AUTOMOC ON)
SET(CMAKE_AUTORCC ON)

SET(CMAKE_INCLUDE_CURRENT_DIR ON)

# Qt
LIST(APPEND CMAKE_PREFIX_PATH "${CMAKE_CURRENT_LIST_DIR}/thirdparty/qt/install")
FIND_PACKAGE(Qt6 COMPONENTS Core Gui Widgets OpenGLWidgets REQUIRED NO_CMAKE_SYSTEM_PATH)

# Json
INCLUDE(thirdparty/json.cmake)

# Development build: dynamic link
if(NOT BUILD_STATIC_RELEASE)
  # OpenSceneGraph
  INCLUDE(thirdparty/openscenegraph.cmake)

  # lib3mf
  INCLUDE(thirdparty/lib3mf.cmake)
ENDIF()

# Release build: static link
if(BUILD_STATIC_RELEASE)
  # OpenSceneGraph
  LIST(APPEND CMAKE_PREFIX_PATH "${CMAKE_CURRENT_LIST_DIR}/thirdparty/openscenegraph/install")
  FIND_PACKAGE(OpenSceneGraph REQUIRED COMPONENTS osgViewer osgDB osgGA osgText osgUtil)

  # lib3mf
  LIST(APPEND CMAKE_PREFIX_PATH "${CMAKE_CURRENT_LIST_DIR}/thirdparty/lib3mf/install")
  FIND_PACKAGE(Lib3MF REQUIRED)
ENDIF()

# The executable we want to build
QT_ADD_EXECUTABLE(TrackpointApp
  src/main.cpp
  src/MainWindow.cpp
  include/MainWindow.hpp
  gui/MainWindow.ui
  include/OSGWidget.hpp
  src/OSGWidget.cpp
  src/PickHandler.cpp
  src/StoreHandler.cpp
  src/TrackPoint.cpp
  src/ThreeMFWriter.cpp
  src/OpenScadRenderer.cpp
)

set (TRACKPOINTAPP_INCLUDE_DIRS "")
set (TRACKPOINTAPP_LINK_LIBRARIES "")

if(NOT BUILD_STATIC_RELEASE)
  LIST(APPEND TRACKPOINTAPP_INCLUDE_DIRS
    ${${OPENSCENEGRAPH_PREFIX}_SOURCE_DIR}/include
    ${${LIB3MF_PREFIX}_BINARY_DIR}/Autogenerated/Bindings/Cpp
  )

  LIST(APPEND TRACKPOINTAPP_LINK_LIBRARIES
    osg osgViewer osgDB osgGA osgText osgUtil
    lib3mf
  )
ENDIF()

if(BUILD_STATIC_RELEASE)
  LIST(APPEND TRACKPOINTAPP_INCLUDE_DIRS
    ${OPENSCENEGRAPH_INCLUDE_DIRS}
    ${LIB3MF_INCLUDE_DIRS}
  )

  LIST(APPEND TRACKPOINTAPP_LINK_LIBRARIES
    ${OPENSCENEGRAPH_LIBRARIES}
    ${LIB3MF_LIBRARIES}
  )
ENDIF()

message(${TRACKPOINTAPP_INCLUDE_DIRS} status)

INCLUDE_DIRECTORIES(
  ${TRACKPOINTAPP_INCLUDE_DIRS}
  ${${JSON_PREFIX}_SOURCE_DIR}/include
  include
  gui
)

TARGET_LINK_LIBRARIES(TrackpointApp PRIVATE
  ${TRACKPOINTAPP_LINK_LIBRARIES}
  nlohmann_json::nlohmann_json
  Qt6::Core
  Qt6::Gui
  Qt6::Widgets
  Qt6::OpenGLWidgets
)

# Header to have version number available in the code
CONFIGURE_FILE(src/trackpointapp.hpp.in src/trackpointapp.hpp)
